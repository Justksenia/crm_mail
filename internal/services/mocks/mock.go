// Code generated by MockGen. DO NOT EDIT.
// Source: service.go

// Package mock_services is a generated GoMock package.
package mock_services

import (
	types "mail/internal/types"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBox is a mock of Box interface.
type MockBox struct {
	ctrl     *gomock.Controller
	recorder *MockBoxMockRecorder
}

// MockBoxMockRecorder is the mock recorder for MockBox.
type MockBoxMockRecorder struct {
	mock *MockBox
}

// NewMockBox creates a new mock instance.
func NewMockBox(ctrl *gomock.Controller) *MockBox {
	mock := &MockBox{ctrl: ctrl}
	mock.recorder = &MockBoxMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBox) EXPECT() *MockBoxMockRecorder {
	return m.recorder
}

// CheckConnect mocks base method.
func (m *MockBox) CheckConnect(arg0 types.ConnectMailBox) (string, bool) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckConnect", arg0)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(bool)
	return ret0, ret1
}

// CheckConnect indicates an expected call of CheckConnect.
func (mr *MockBoxMockRecorder) CheckConnect(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckConnect", reflect.TypeOf((*MockBox)(nil).CheckConnect), arg0)
}

// CreateMailBox mocks base method.
func (m *MockBox) CreateMailBox(body types.CreateBoxBody) ([]types.Box, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateMailBox", body)
	ret0, _ := ret[0].([]types.Box)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateMailBox indicates an expected call of CreateMailBox.
func (mr *MockBoxMockRecorder) CreateMailBox(body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateMailBox", reflect.TypeOf((*MockBox)(nil).CreateMailBox), body)
}

// GetAccountMailFolder mocks base method.
func (m *MockBox) GetAccountMailFolder(accountId int) ([]types.BoxWithFolders, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountMailFolder", accountId)
	ret0, _ := ret[0].([]types.BoxWithFolders)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountMailFolder indicates an expected call of GetAccountMailFolder.
func (mr *MockBoxMockRecorder) GetAccountMailFolder(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountMailFolder", reflect.TypeOf((*MockBox)(nil).GetAccountMailFolder), accountId)
}

// GetMailsBox mocks base method.
func (m *MockBox) GetMailsBox(typeBox string) ([]types.FullBox, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetMailsBox", typeBox)
	ret0, _ := ret[0].([]types.FullBox)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetMailsBox indicates an expected call of GetMailsBox.
func (mr *MockBoxMockRecorder) GetMailsBox(typeBox interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetMailsBox", reflect.TypeOf((*MockBox)(nil).GetMailsBox), typeBox)
}

// UpdateMailBox mocks base method.
func (m *MockBox) UpdateMailBox(boxId string, body types.BodyBoxUpdate) ([]types.Box, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateMailBox", boxId, body)
	ret0, _ := ret[0].([]types.Box)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateMailBox indicates an expected call of UpdateMailBox.
func (mr *MockBoxMockRecorder) UpdateMailBox(boxId, body interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateMailBox", reflect.TypeOf((*MockBox)(nil).UpdateMailBox), boxId, body)
}

// MockFolder is a mock of Folder interface.
type MockFolder struct {
	ctrl     *gomock.Controller
	recorder *MockFolderMockRecorder
}

// MockFolderMockRecorder is the mock recorder for MockFolder.
type MockFolderMockRecorder struct {
	mock *MockFolder
}

// NewMockFolder creates a new mock instance.
func NewMockFolder(ctrl *gomock.Controller) *MockFolder {
	mock := &MockFolder{ctrl: ctrl}
	mock.recorder = &MockFolderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFolder) EXPECT() *MockFolderMockRecorder {
	return m.recorder
}

// CreateFolder mocks base method.
func (m *MockFolder) CreateFolder(arg0 types.FolderBody) (types.Folder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateFolder", arg0)
	ret0, _ := ret[0].(types.Folder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateFolder indicates an expected call of CreateFolder.
func (mr *MockFolderMockRecorder) CreateFolder(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateFolder", reflect.TypeOf((*MockFolder)(nil).CreateFolder), arg0)
}

// DeleteFolder mocks base method.
func (m *MockFolder) DeleteFolder(arg0 types.FolderBody, arg1 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteFolder", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteFolder indicates an expected call of DeleteFolder.
func (mr *MockFolderMockRecorder) DeleteFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteFolder", reflect.TypeOf((*MockFolder)(nil).DeleteFolder), arg0, arg1)
}

// GetAccountFolder mocks base method.
func (m *MockFolder) GetAccountFolder(accountId int) ([]types.Folder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAccountFolder", accountId)
	ret0, _ := ret[0].([]types.Folder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAccountFolder indicates an expected call of GetAccountFolder.
func (mr *MockFolderMockRecorder) GetAccountFolder(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAccountFolder", reflect.TypeOf((*MockFolder)(nil).GetAccountFolder), accountId)
}

// GetFoldersByAccount mocks base method.
func (m *MockFolder) GetFoldersByAccount(accountId int) ([]types.Folder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFoldersByAccount", accountId)
	ret0, _ := ret[0].([]types.Folder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFoldersByAccount indicates an expected call of GetFoldersByAccount.
func (mr *MockFolderMockRecorder) GetFoldersByAccount(accountId interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFoldersByAccount", reflect.TypeOf((*MockFolder)(nil).GetFoldersByAccount), accountId)
}

// UpdateFolder mocks base method.
func (m *MockFolder) UpdateFolder(arg0 types.FolderBody, arg1 string) (types.Folder, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateFolder", arg0, arg1)
	ret0, _ := ret[0].(types.Folder)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateFolder indicates an expected call of UpdateFolder.
func (mr *MockFolderMockRecorder) UpdateFolder(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateFolder", reflect.TypeOf((*MockFolder)(nil).UpdateFolder), arg0, arg1)
}
